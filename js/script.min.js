function getEvents() {
    console.log("Getting Events"), Storage.prototype.setObj = function(a, b) {
        this.setItem(a, JSON.stringify(b));
    };
    var a = 0, b = [], c = new XMLHttpRequest();
    c.open("GET", "https://cors-anywhere.herokuapp.com/http://www.ggc.edu/student-life/events-calendar/events-calendar/summary"),
    c.send(null), c.onreadystatechange = function() {
        if (4 == c.readyState) {
            for (var d, e = new DOMParser(), f = e.parseFromString(c.responseText, "text/html"), g = f.querySelectorAll(".SECalendarSummaryDate"), h = 0; h < g.length; h++) if ("SECalendarSummaryDate" != g[h].className) console.log(!1); else if (g[h].querySelectorAll(".SECalendarPropertyContainer").length > 1) for (var i = 0; i < g[h].querySelectorAll(".SECalendarPropertyContainer").length; i++) d = g[h].querySelectorAll(".SECalendarSummaryDateEventList"),
            b[a] = new Array(g[h].querySelector("h3").innerText, d[0].children[i].querySelector(".SECalendarEventName").innerText, d[0].children[i].children[0].children[2].innerText, d[0].children[i].children[0].children[4].innerText.replace(/^\s+|\s+$/g, "")),
            a += 1; else d = g[h].querySelectorAll(".SECalendarPropertyContainer"), b[a] = new Array(g[h].querySelector("h3").innerText, g[h].querySelector(".SECalendarEventName").innerText, d[0].children[2].innerText, d[0].children[4].innerText.replace(/^\s+|\s+$/g, "")),
            a += 1;
            localStorage.setObj("event_key", b), localStorage.setObj("eventNumber_key", a),
            checkLocalStorage();
        }
    };
}

function insertEvents(a, b) {
    for (var c = new Date(), d = c.getFullYear(), e = c.getMonth(), f = (new Date(d, e + 1, 0),
    /[a-zA-Z]\-[A-Z|0-9][0-9]+/), g = 0; g < b; g++) {
        var h = a[g][0].substring(a[g][0].search(c.toLocaleString("en", {
            month: "long"
        })) + c.toLocaleString("en", {
            month: "long"
        }).length, a[g][0].lastIndexOf(","));
        if (h >= c.getDate() && h <= c.getDate() + 14) {
            var i = document.createElement("div");
            i.className = "event";
            var j = document.createElement("div");
            j.className = "tab-group";
            var k = document.createElement("h5");
            k.innerText = a[g][1];
            var l = document.createElement("p");
            l.innerText = a[g][0];
            var m = document.createElement("p");
            m.innerText = a[g][2];
            var n = document.createElement("p");
            n.innerText = a[g][3];
            var o = document.createElement("a"), p = a[g][3].replace(/ /g, ""), q = a[g][3].split(", ");
            if (1 == q[0].includes("(")) {
                var r = q[0].search("\\("), s = q[0].search("\\)");
                q[0] = q[0].replace(q[0].substr(r - 1, s), "");
            }
            var t = q[0].split(" "), u = !1;
            if (1 == f.test(p)) {
                o.setAttribute("href", window.location.href.substring(0, window.location.href.search("#") + 1) + f.exec(p)[0].replace("-", "")),
                o.setAttribute("onclick", "closeTab('campusEvents');"), o.appendChild(k), o.appendChild(l),
                o.appendChild(m), o.appendChild(n), i.appendChild(o), j.appendChild(i), 1 == f.exec(p)[0].includes("C-G") ? i.id = "C3" : "C" == f.exec(p)[0].substr(0, 1) && parseInt(f.exec(p)[0].substr(2, 4)) > 1300 && parseInt(f.exec(p)[0].substr(2, 4)) < 2e3 || "C" == f.exec(p)[0].substr(0, 1) && parseInt(f.exec(p)[0].substr(2, 4)) > 2300 && parseInt(f.exec(p)[0].substr(2, 4)) < 3e3 ? i.id = "C3" : i.id = f.exec(p)[0].substr(0, 1);
                var v = document.querySelectorAll("div#campusEvents")[0].children[0].children[2];
                v.appendChild(j);
            } else {
                var w, x;
                for (var y in roomNames) for (var z in roomNames[y]) for (var A in roomNames[y][z]) t.length >= 2 && 1 == roomNames[y][z][A].name.includes(t[0].toLowerCase() + "-" + t[1].toLowerCase()) ? (u = !0,
                w = roomNames[y][z][A].name, x = y.toUpperCase()) : 1 == t.length && 1 == roomNames[y][z][A].name.includes(t[0].toLowerCase()) && (u = !0,
                w = roomNames[y][z][A].name, x = y.toUpperCase());
                if (1 == u) {
                    o.setAttribute("href", window.location.href.substring(0, window.location.href.search("#") + 1) + w),
                    o.setAttribute("onclick", "closeTab('campusEvents');"), i.id = x, o.appendChild(k),
                    o.appendChild(l), o.appendChild(m), o.appendChild(n), i.appendChild(o), j.appendChild(i);
                    var v = document.querySelectorAll("div#campusEvents")[0].children[0].children[2];
                    v.appendChild(j);
                } else if (q.length > 1 && 1 == q[1].includes("Building") || q.length > 1 && 1 == q[0].includes("Building")) if (1 == q[1].includes("Building")) {
                    o.setAttribute("href", window.location.href.substring(0, window.location.href.search("#") + 1) + q[1].substr(q[1].search("Building") + 9)),
                    i.id = q[1].substr(q[1].search("Building") + 9), o.setAttribute("onclick", "closeTab('campusEvents');"),
                    o.appendChild(k), o.appendChild(l), o.appendChild(m), o.appendChild(n), i.appendChild(o),
                    j.appendChild(i);
                    var v = document.querySelectorAll("div#campusEvents")[0].children[0].children[2];
                    v.appendChild(j);
                } else {
                    var B = /[A-Z|0-9][0-9]+/;
                    o.setAttribute("href", window.location.href.substring(0, window.location.href.search("#") + 1) + q[0].substr(q[0].search("Building") + 9) + B.exec(q[1])),
                    i.id = q[0].substr(q[0].search("Building") + 9), o.setAttribute("onclick", "closeTab('campusEvents');"),
                    o.appendChild(k), o.appendChild(l), o.appendChild(m), o.appendChild(n), i.appendChild(o),
                    j.appendChild(i);
                    var v = document.querySelectorAll("div#campusEvents")[0].children[0].children[2];
                    v.appendChild(j);
                } else if (1 == a[g][3].includes("Student Center")) {
                    o.setAttribute("href", window.location.href.substring(0, window.location.href.search("#") + 1) + "E"),
                    i.id = "E", o.setAttribute("onclick", "closeTab('campusEvents');"), o.appendChild(k),
                    o.appendChild(l), o.appendChild(m), o.appendChild(n), i.appendChild(o), j.appendChild(i);
                    var v = document.querySelectorAll("div#campusEvents")[0].children[0].children[2];
                    v.appendChild(j);
                } else {
                    i.appendChild(k), i.appendChild(l), i.appendChild(m), i.appendChild(n), j.appendChild(i);
                    var v = document.querySelectorAll("div#campusEvents")[0].children[0].children[2];
                    v.appendChild(j);
                }
            }
        }
    }
}

function checkLocalStorage() {
    Storage.prototype.getObj = function(a) {
        return JSON.parse(this.getItem(a));
    };
    var a = new Date();
    a.getFullYear(), a.getMonth();
    null == localStorage.getObj("event_key") || null == localStorage.getObj("eventNumber_key") ? getEvents() : null != localStorage.getObj("event_key") && 0 == localStorage.getObj("event_key")[0][0].includes(a.toLocaleString("en", {
        month: "long"
    })) ? getEvents() : insertEvents(localStorage.getObj("event_key"), localStorage.getObj("eventNumber_key"));
}

function cookieMold(a, b, c) {
    var d = new Date();
    d.setTime(d.getTime() + 24 * c * 60 * 60 * 1e3);
    var e = "expires=" + d.toUTCString();
    document.cookie = a + "=" + b + ";" + e + ";path=/";
}

function eatCookie(a) {
    for (var b = a + "=", c = decodeURIComponent(document.cookie), d = c.split(";"), e = 0; e < d.length; e++) {
        for (var f = d[e]; " " == f.charAt(0); ) f = f.substring(1);
        if (0 === f.indexOf(b)) return f.substring(b.length, f.length);
    }
    return "";
}

function agreePage(a) {
    document.cookie = "agreement=" + a, window.location.replace("index.html");
}

function visitCheck() {
    if ("" === eatCookie("visits") || null === eatCookie("visits")) cookieMold("visits", 1, 1); else {
        cookieMold("visits", parseInt(eatCookie("visits")) + 1, 1), "show" === eatCookie("legend") && (document.getElementById("legendSwitch").checked = !0);
    }
}

function cookieLegend() {
    var a = eatCookie("legend").toUpperCase();
    if (null !== eatCookie("legend")) switch (a) {
      case "HIDE":
        cookieMold("legend", "show", 9999), console.log("Now Showing");
        break;

      case "SHOW":
        cookieMold("legend", "hide", 9999), console.log("Now Hiding");
        break;

      default:
        console.log("Done changing");
    }
}

function firstLegend() {
    "" !== eatCookie("visits") && null !== eatCookie("visits") || cookieMold("legend", "hide", 9999);
}

function openMenu() {
    var a = document.getElementsByClassName("nav")[0], b = document.getElementsByClassName("content-disable")[0];
    "nav" === a.className && (a.classList.add("nav-active"), b.classList.add("active"));
}

function closeMenu() {
    console.log("closeMenu ran");
    var a = document.getElementsByClassName("nav")[0], b = document.getElementsByClassName("content-disable")[0];
    "nav nav-active" === a.className && (a.classList.remove("nav-active"), b.classList.remove("active"));
    var c = document.getElementsByClassName("floors")[0];
    "floors floors-active" === c.className && c.classList.remove("floors-active");
}

function subMenu(a) {
    var b = document.getElementsByClassName(a)[0];
    b.className === a ? b.classList.add("subMenu-active") : b.className === a + " subMenu-active" && b.classList.remove("subMenu-active");
}

function urlRoom() {
    if (console.log("urlRoom started"), window.navigator.userAgent.indexOf("Edge") > -1) ; else {
        var a = window.location.hash, b = a.substring(a.lastIndexOf("#") + 1);
        if ("" === b || b.includes(".") || "campus" === b.toLowerCase()) addMap(campus, "Campus").then(function(a) {
            window.location.hash = "Campus", document.getElementById("search").value = "";
        }, function(a) {
            console.error("Failed!", a);
        }); else switch (b.toUpperCase()) {
          case "2":
            changeFloor("2");
            break;

          case "3":
            changeFloor("3", "1");
            break;

          case "A":
            changeFloor("A");
            break;

          case "B":
            changeFloor("B", "1");
            break;

          case "C":
            changeFloor("C", "1");
            break;

          case "C3":
            changeFloor("C3", "G");
            break;

          case "D":
            changeFloor("D", "1");
            break;

          case "E":
            changeFloor("E", "1");
            break;

          case "F":
            changeFloor("F", "1");
            break;

          case "H":
            changeFloor("H", "1");
            break;

          case "I":
            changeFloor("I", "1");
            break;

          case "L":
            changeFloor("L", "1");
            break;

          case "G":
          case "J":
          case "K":
          case "M":
          case "N":
          case "O":
          case "P":
          case "Q":
          case "R":
          case "S":
          case "T":
          case "U":
          case "V":
          case "W":
          case "X":
          case "Y":
          case "Z":
            window.location.hash = "Campus";
            break;

          default:
            console.log("urlRoom calls searchFromMenu"), searchFromMenu(b);
        }
    }
}

function searchSuggest(a) {
    console.log("searchSuggest started");
    var b = document.getElementById("roomSearch").value.toUpperCase();
    roomList = document.getElementById("rooms");
    var c = [], d = [], e = "undefined" != typeof InstallTrigger, f = "";
    if (loadSearch("Building\\AllRooms.txt"), c = document.getElementById("arrayStore").value.split(","),
    console.log(b), e) {
        if ("" == roomList.innerHTML) {
            for (var g = 0; g < c.length - 1; g++) f += '<option value="' + c[g] + '" />';
            roomList.innerHTML = f;
        }
    } else {
        for (var h = 0; h <= c.length - 1; h++) c[h].includes(b) && d.push(c[h]);
        console.log(d);
        for (var i = 0; i < 4 && i <= d.length - 1; i++) f += '<option value="' + d[i] + '" />';
        roomList.innerHTML = f;
    }
}

function loadSearch(a) {
    return console.log("loadSearch started"), new Promise(function(b, c) {
        var d = new XMLHttpRequest();
        d.open("GET", a, !0), d.onload = function() {
            200 !== d.status && c(Error(d.statusText)), document.getElementById("arrayStore").value = d.responseText.split("\n"),
            b(d.response);
        }, d.onerror = function() {
            c(Error("Network Error"));
        }, d.send();
    });
}

function loadRooms() {
    return console.log("loadRooms started"), new Promise(function(a, b) {
        var c = new XMLHttpRequest();
        c.open("GET", roomNameFile, !0), c.onload = function() {
            200 !== c.status && b(Error(c.statusText)), roomNames = JSON.parse(c.response),
            a(c.response);
        }, c.onerror = function() {
            b(Error("Network Error"));
        }, c.send();
    });
}

function buildingLegend() {
    var a = document.getElementById("bLegend");
    "none" !== document.getElementById("pLegend").style.display && document.getElementById("legendSwitch").click(),
    "block" === a.style.display ? a.style.display = "none" : a.style.display = "block";
}

function switchLegend() {
    "none" !== document.getElementById("bLegend").style.display && document.getElementById("buildingLegendSwitch").click();
}

function addMap(a, b, c) {
    console.log("addMap started");
    var d = document.getElementById("building"), e = document.getElementById("floor"), f = document.getElementById("svg-holder");
    return new Promise(function(g, h) {
        var i = new XMLHttpRequest();
        i.open("GET", a, !0), i.onload = function() {
            if (200 !== i.status && h(Error(i.statusText)), b !== d) {
                var a = document.getElementById("building-popup"), j = document.getElementsByClassName("dropdown")[0], k = document.getElementsByClassName("campus-info")[0];
                "Campus" === b ? (hideElement(a, HIDE), "show" === eatCookie("legend") ? (hideElement(k, SHOW),
                document.getElementById("pLegend").style.display = "inherit") : (hideElement(k, HIDE),
                document.getElementById("pLegend").style.display = "none")) : (hideElement(a, SHOW),
                hideElement(k, HIDE)), void 0 !== c ? (hideElement(e, SHOW), hideElement(j, SHOW),
                floorDropDown(b), e.innerHTML = "FL" + c) : (hideElement(e, HIDE), hideElement(j, HIDE));
            }
            removeMap(), f.appendChild(convertToElement(i.response));
            var l = f.childNodes[0];
            l.style.height = getClientHeight(), d.innerHTML = b;
            var m;
            m = {
                haltEventListeners: [ "touchStart", "touchend", "touchmove", "touchleave", "touchcancel" ],
                init: function(a) {
                    var c = a.instance, d = 1, e = 0, f = 0;
                    this.hammer = Hammer(a.svgElement, {
                        inputClass: Hammer.SUPPORT_POINTER_EVENTS ? Hammer.PointerEventInput : Hammer.TouchInput
                    }), this.hammer.get("pinch").set({
                        enable: !0
                    }), this.hammer.on("doubletap", function(a) {
                        c.zoomIn();
                    }), this.hammer.on("panstart panmove", function(a) {
                        "panstart" === a.type && (e = 0, f = 0), c.panBy({
                            x: a.deltaX - e,
                            y: a.deltaY - f
                        }), e = a.deltaX, f = a.deltaY;
                    }), this.hammer.on("pinchstart pinchmove", function(a) {
                        "pinchstart" === a.type && (d = c.getZoom(), c.zoom(d * a.scale)), c.zoom(d * a.scale);
                    }), this.hammer.on("tap", function(a) {
                        if (toggleTab(a, "helpbox"), toggleTab(a, "devbox"), "Campus" === b) {
                            var c = a.target.parentNode.id.toUpperCase();
                            if ("A" === c) changeFloor(c); else if ("C3" === c) changeFloor(c, "G"); else for (var d in roomNames) c === d && changeFloor(d, "1");
                        } else {
                            var e = a.target.parentNode.id;
                            4 !== e.length && 5 !== e.length || (console.log("addMap calls activateRoom"), activateRoom(a.target.parentNode.id));
                        }
                    }), a.svgElement.addEventListener("touchmove", function(a) {
                        a.preventDefault();
                    });
                },
                destroy: function() {
                    this.hammer.destroy();
                }
            };
            var n = svgPanZoom(l, {
                controlIconsEnabled: !0,
                fit: 1,
                center: 1,
                customEventsHandler: m
            });
            window.addEventListener("resize", function() {
                l.style.height = getClientHeight(), n.resize(), n.fit(), n.center();
            }), g(i.response);
        }, i.onerror = function() {
            h(Error("Network Error"));
        }, i.send();
    });
}

function removeMap() {
    console.log("removeMap started");
    for (var a = document.getElementById("svg-holder"); a.hasChildNodes(); ) a.removeChild(a.lastChild);
}

function floorDropDown(a) {
    console.log("floorDropDown started");
    for (var b = document.getElementsByClassName("floors")[0]; b.hasChildNodes(); ) b.removeChild(b.lastChild);
    var c = [];
    switch (a) {
      case "2":
        c = floors2;
        break;

      case "3":
        c = floors3;
        break;

      case "A":
        c = floorsA;
        break;

      case "B":
        c = floorsB;
        break;

      case "C":
        c = floorsC;
        break;

      case "C3":
        c = floorsC3;
        break;

      case "D":
        c = floorsD;
        break;

      case "E":
        c = floorsE;
        break;

      case "F":
        c = floorsF;
        break;

      case "H":
        c = floorsH;
        break;

      case "I":
        c = floorsI;
        break;

      case "L":
        c = floorsL;
    }
    for (var d = 0; d < c.length; d++) {
        var e = "<h2 onclick=\"changeFloor('" + a + "', '" + c[d] + "')\">Floor " + c[d] + "</h2>";
        b.appendChild(convertToElement(e));
    }
}

function activateRoom(a, b) {
    if (console.log(">>>>> activateRoom started"), "4983" !== a) {
        var c = document.getElementById(a.toLowerCase());
        if (null === c) alert("Sorry, room number " + a + " couldn't be found in this building."); else {
            var d = c.className.baseVal;
            if ("room-group" !== d && !b) {
                if ("room-group active-room" === d) return void deactivateAllRooms();
                return;
            }
            "room-group" === d && (deactivateAllRooms(), c.classList.add("active-room"));
        }
    }
}

function deactivateAllRooms() {
    console.log("deactivateAllRooms started");
    for (var a = document.getElementsByClassName("room-group"), b = 0; b < a.length; b++) a[b].classList.remove("active-room");
}

function searchFromBar(a) {
    console.log("searchFromBar started"), 13 != a.which && 13 != a.keyCode || (console.log("searchFromBar calls searchRoomNumber"),
    searchRoomNumber());
}

function searchFromMenu(a) {
    console.log("searchFromMenu started"), closeMenu(), console.log("searchFromMenu calls parseSearch");
    var b = parseSearch(a);
    "" !== b.roomName ? document.getElementById("roomSearch").value = b.roomName : document.getElementById("roomSearch").value = b.building + " " + b.room,
    console.log("searchFromMenu calls searchRoomNumber"), searchRoomNumber();
}

function searchRoomNumber() {
    console.log("searchRoomNumber started"), console.log("searchRoomNumber calls parseSearch");
    var a = parseSearch(document.getElementById("roomSearch").value.toUpperCase());
    if ("campus" === a.roomName.toLowerCase()) document.getElementById("roomSearch").value = "",
    changeFloor("Campus"); else {
        var b = "4983", c = document.getElementById("building").innerHTML, d = c, e = document.getElementById("floor").innerHTML, f = "", g = "";
        if ("" !== a.building && (c = a.building), "" !== a.room && (b = a.room), "" !== a.roomName) {
            b = "";
            for (var h in roomNames) {
                var i = h;
                for (var j in roomNames[h]) {
                    var k = j;
                    for (var l in roomNames[h][j]) {
                        var m = roomNames[h][j][l];
                        m.name.toLowerCase() === a.roomName.toLowerCase() && (f = i, g = k, b = m.id);
                    }
                }
            }
            "" === b ? alert('Were you trying to search by nickname? Unfortunately, "' + a.roomName + '" is not recognized.\nPlease check your spelling, or try a more common name.\n\nExample: Search for "Moes" not "Mo"') : window.location.hash = a.roomName;
        } else {
            switch (function() {
                console.log("upperHash started"), window.location.hash = "4983" !== b ? c.toUpperCase() + b.toUpperCase() : c.toUpperCase(),
                console.log("urlRoom stopped by upperHash()"), clearTimeout(urlTimer);
            }(), c[0].toUpperCase()) {
              case "2":
                f = "2", g = void 0;
                break;

              case "3":
                "4" === b[0] ? (f = "3", g = "4") : "3" === b[0] ? (f = "3", g = "3") : "2" === b[0] ? (f = "3",
                g = "2") : (f = "3", g = "1");
                break;

              case "A":
                f = "A", g = void 0;
                break;

              case "B":
                "3" === b[0] ? (f = "B", g = "3") : "2" === b[0] ? (f = "B", g = "2") : (b[0], f = "B",
                g = "1");
                break;

              case "C":
                "3" === b[1] ? "2" === b[0] ? (f = "C3", g = "2") : "1" === b[0] ? (f = "C3", g = "1") : (f = "C3",
                g = "G") : "2" === b[0] ? (f = "C", g = "2") : (f = "C", g = "1");
                break;

              case "D":
                "2" === b[0] ? (f = "D", g = "2") : (b[0], f = "D", g = "1");
                break;

              case "E":
                "3" === b[0] ? (f = "E", g = "3") : "2" === b[0] ? (f = "E", g = "2") : (b[0], f = "E",
                g = "1");
                break;

              case "F":
                "2" === b[0] ? (f = "F", g = "2") : (b[0], f = "F", g = "1");
                break;

              case "H":
                "3" === b[0] ? (f = "H", g = "3") : "2" === b[0] ? (f = "H", g = "2") : (b[0], f = "H",
                g = "1");
                break;

              case "I":
                "3" === b[0] ? (f = "I", g = "3") : "2" === b[0] ? (f = "I", g = "2") : (b[0], f = "I",
                g = "1");
                break;

              case "L":
                "3" === b[0] ? (f = "L", g = "3") : "2" === b[0] ? (f = "L", g = "2") : (b[0], f = "L",
                g = "1");
                break;

              case "G":
              case "J":
              case "K":
              case "M":
              case "N":
              case "O":
              case "P":
              case "Q":
              case "R":
              case "S":
              case "T":
              case "U":
              case "V":
              case "W":
              case "X":
              case "Y":
              case "Z":
                if ("0" === b[0] || "1" === b[0] || "2" === b[0] || "3" === b[0] || "4" === b[0] || "5" === b[0] || "6" === b[0] || "7" === b[0] || "8" === b[0] || "9" === b[0]) {
                    alert("Did you mean to search for building " + c + "?\nThat building doesn't exist.");
                    break;
                }
                alert(c + " is an invalid building."), changeFloor("Campus");
                break;

              default:
                alert("I'm sorry, " + c + " is a character we don't understand.");
            }
        }
        d !== f || e !== g ? (console.log("searchRoomNumber calls searchNewFloor"), searchNewFloor(f, g, b)) : (console.log("searchRoomNumber calls activateRoom"),
        activateRoom(b, !0));
    }
}

function getMap(a, b) {
    console.log("getMap started");
    var c = "";
    switch (a) {
      case "Campus":
        c = campus;
        break;

      case "2":
        c = building2[0];
        break;

      case "3":
        c = "4" === b ? building3[3] : "3" === b ? building3[2] : "2" === b ? building3[1] : building3[0];
        break;

      case "A":
        c = buildingA[0];
        break;

      case "B":
        c = "3" === b ? buildingB[2] : "2" === b ? buildingB[1] : buildingB[0];
        break;

      case "C":
        c = "1" === b ? buildingC[0] : buildingC[1];
        break;

      case "C3":
        c = "2" === b ? buildingC3[2] : "1" === b ? buildingC3[1] : buildingC3[0];
        break;

      case "D":
        c = "2" === b ? buildingD[1] : buildingD[0];
        break;

      case "E":
        c = "3" === b ? buildingE[2] : "2" === b ? buildingE[1] : buildingE[0];
        break;

      case "F":
        c = "2" === b ? buildingF[1] : buildingF[0];
        break;

      case "H":
        c = "3" === b ? buildingH[2] : "2" === b ? buildingH[1] : buildingH[0];
        break;

      case "I":
        c = "3" === b ? buildingI[2] : "2" === b ? buildingI[1] : buildingI[0];
        break;

      case "L":
        c = "3" === b ? buildingL[2] : "2" === b ? buildingL[1] : buildingL[0];
    }
    return console.log("getMap returning"), c;
}

function changeFloor(a, b) {
    console.log("changeFloor started"), closeMenu();
    var c = a.toUpperCase();
    document.getElementById("roomSearch").value = "", "" !== (c = getMap(a, b)) && addMap(c, a, b).then(function(b) {
        window.location.hash = a, console.log("urlRoom stopped by changeFloor"), clearTimeout(urlTimer);
    }, function(a) {
        console.error("Failed!", a);
    });
}

function searchNewFloor(a, b, c) {
    console.log("searchNewFloor started");
    var d = a, e = document.getElementById("building"), f = document.getElementById("floor");
    e.innerHTML === a && f.innerHTML === b || (console.log("searchNewFloor calls getMap"),
    "" !== (d = getMap(a.toUpperCase(), b)) && (console.log("searchNewFloor calls addMap"),
    addMap(d, a, b).then(function(a) {
        console.log("searchNewFloor calls activateRoom"), activateRoom(c, !0);
    }, function(a) {
        console.error("Failed!", a);
    })));
}

function sortEvents() {
    var a = /[A-Z][A-Z|0-9][0-9]+/, b = 0, c = document.querySelectorAll("div.event");
    if (document.querySelectorAll("h5.no-events")[0].style.display = "none", window.location.hash.length <= 2) {
        for (var d = 0; d < c.length; d++) window.location.hash.substr(1) != c[d].id ? (c[d].style.display = "none",
        b++) : window.location.hash.substr(1) == c[d].id && (c[d].style.display = "block");
        b == c.length && (document.querySelectorAll("h5.no-events")[0].style.display = "block");
    } else if (1 == a.test(window.location.hash.substr(1))) if (1 == window.location.hash.includes("CG") || 1 == window.location.hash.includes("C") && window.location.hash.substr(2, 4) > 1300 && window.location.hash.substr(2, 4) < 1400 || 1 == window.location.hash.includes("C") && window.location.hash.substr(2, 4) > 2300 && window.location.hash.substr(2, 4) < 2400) {
        for (var d = 0; d < c.length; d++) "C3" == c[d].id ? c[d].style.display = "block" : (c[d].style.display = "none",
        b++);
        b == c.length && (document.querySelectorAll("h5.no-events")[0].style.display = "block");
    } else {
        for (var d = 0; d < c.length; d++) window.location.hash.substr(1, 1) == c[d].id ? c[d].style.display = "block" : (c[d].style.display = "none",
        b++);
        b == c.length && (document.querySelectorAll("h5.no-events")[0].style.display = "block");
    } else if ("#Campus" == window.location.hash) for (var d = 0; d < c.length; d++) c[d].style.display = "block"; else {
        var e;
        for (var f in roomNames) for (var g in roomNames[f]) for (var h in roomNames[f][g]) window.location.hash.substr(1) == roomNames[f][g][h].name && (e = f,
        console.log(e));
        for (var b = 0, d = 0; d < c.length; d++) c[d].id == e ? (c[d].style.display = "block",
        b++) : c[d].style.display = "none";
        b == c.length && (document.querySelectorAll("h5.no-events")[0].style.display = "block");
    }
    openTab("campusEvents");
}

function openTab(a) {
    closeMenu();
    var b = document.getElementById(a);
    if (!b.classList.contains("tab-active")) {
        b.classList.toggle("tab-active");
        var c = tabContentHeight(a);
        b.childNodes[0].childNodes[7].style.height = c + "px";
    }
}

function closeTab(a) {
    var b = document.getElementById(a);
    b.classList.contains("tab-active") && b.classList.toggle("tab-active");
}

function tabContentHeight(a) {
    return (window.innerHeight || document.body.clientHeight) - document.getElementById(a).childNodes[0].childNodes[1].clientHeight;
}

function isLetter(a) {
    return a.toLowerCase() !== a.toUpperCase();
}

function isNumeric(a) {
    return !isNaN(parseFloat(a)) && isFinite(a);
}

function parseSearch(a) {
    console.log("parseSearch started");
    for (var b = a.split(/[ \+-\s<>'"();\/\\]+/), c = "", d = "", e = "", f = 0; f < b.length; f++) 1 === b[f].length && isLetter(b[f]) && 0 === f ? c = b[f] : 4 === b[f].length ? isNumeric(b[f]) ? d = b[f] : "G" === b[f].charAt(0) && isNumeric(b[f].substring(1)) ? (d = b[f],
    c = "C") : ("" !== e && (e += "-"), e += b[f]) : 5 === b[f].length ? isNumeric(b[f].substring(1)) ? (d = b[f].substring(1),
    c = b[f].charAt(0)) : isNumeric(b[f].substring(0, 4)) ? d = b[f] : ("" !== e && (e += "-"),
    e += b[f]) : 6 === b[f].length && isNumeric(b[f].substring(1, 5)) ? (d = b[f].substring(1),
    c = b[f].charAt(0)) : ("" !== e && (e += "-"), e += b[f]);
    return "" === c && "" === d && "" !== e && isLetter(a[0]) && isNumeric(a[2]) && (c = a[0],
    d = a.substring(1), e = ""), {
        building: c,
        room: d,
        roomName: e.toLowerCase()
    };
}

function activatePopup(a, b) {
    a.onmouseover = function() {
        document.getElementById(b).classList.toggle("popup-active");
    }, a.onmouseout = function() {
        document.getElementById(b).classList.toggle("popup-active");
    };
}

function convertToElement(a) {
    var b = document.createElement("div");
    return b.innerHTML = a, b.childNodes[0];
}

function getClientHeight() {
    return (window.innerHeight || document.body.clientHeight) + "px";
}

function dropdown(a, b) {
    document.getElementsByClassName(a)[0].classList.toggle(b);
}

function resetWidth(a) {
    a.resize(), a.fit(), a.center();
}

function hideElement(a, b) {
    b ? a.classList.contains("hide") || a.classList.toggle("hide") : a.classList.contains("hide") && a.classList.toggle("hide");
}

function loadFile(a, b) {
    return new Promise(function(c, d) {
        var e = new XMLHttpRequest();
        e.open("GET", b, !0), e.onload = function() {
            200 !== e.status && d(Error(e.statusText)), document.getElementById(a).appendChild(convertToElement(e.response)),
            c(e.response);
        }, e.onerror = function() {
            d(Error("Network Error"));
        }, e.send();
    });
}

function toggleTab(a, b) {
    var c = document.getElementById(b);
    !isDescendant(c, a.target) && c.classList.contains("tab-active") && c.classList.toggle("tab-active");
}

function isDescendant(a, b) {
    for (var c = b.parentNode; null !== c; ) {
        if (c === a) return !0;
        c = c.parentNode;
    }
    return !1;
}

var campus = "Building/(Campus)/campus.html", building2 = [ "Building/2000/First-Floor.html" ], building3 = [ "Building/3000/First-Floor.html", "Building/3000/Second-Floor.html", "Building/3000/Third-Floor.html", "Building/3000/Fourth-Floor.html" ], buildingA = [ "Building/A/First-Floor.html" ], buildingB = [ "Building/B/first-floor.html", "Building/B/second-floor.html", "Building/B/third-floor.html" ], buildingC = [ "Building/C/First-Floor.html", "Building/C/Second-Floor.html" ], buildingC3 = [ "Building/C3/Ground-Floor.html", "Building/C3/First-Floor.html", "Building/C3/Second-Floor.html" ], buildingD = [ "Building/D/First-Floor.html", "Building/D/Second-Floor.html" ], buildingE = [ "Building/E/First-Floor.html", "Building/E/Second-Floor.html", "Building/E/Third-Floor.html" ], buildingF = [ "Building/F/First-Floor.html", "Building/F/Second-Floor.html" ], buildingH = [ "Building/H/First-Floor.html", "Building/H/Second-Floor.html", "Building/H/Third-Floor.html" ], buildingI = [ "Building/I/First-Floor.html", "Building/I/Second-Floor.html", "Building/I/Third-Floor.html" ], buildingL = [ "Building/L/First-Floor.html", "Building/L/Second-Floor.html", "Building/L/Third-Floor.html" ], floors2 = [ "1" ], floors3 = [ "1", "2", "3", "4" ], floorsA = [ "1" ], floorsB = [ "1", "2", "3" ], floorsC = [ "1", "2" ], floorsC3 = [ "G", "1", "2" ], floorsD = [ "1", "2" ], floorsE = [ "1", "2", "3" ], floorsF = [ "1", "2" ], floorsH = [ "1", "2", "3" ], floorsI = [ "1", "2", "3" ], floorsL = [ "1", "2", "3" ], roomNameFile = "js/roomNames.json", roomNames, helpFile = "help.html", devFile = "devs.html", campusEventsFile = "campusEvents.html", HIDE = !0, SHOW = !1, urlTimer;

document.addEventListener("DOMContentLoaded", function() {
    loadRooms().then(function(a) {}, function(a) {
        console.error("Failed!", a);
    }), loadFile("helpbox", helpFile).then(function(a) {}, function(a) {
        console.error("Failed!", a);
    }), loadFile("devbox", devFile).then(function(a) {}, function(a) {
        console.error("Failed!", a);
    }), loadFile("campusEvents", campusEventsFile).then(function(a) {
        checkLocalStorage();
    }, function(a) {
        console.error("Failed!", a);
    });
    var a = document.getElementById("building"), b = document.getElementById("floor"), c = document.getElementById("menu"), d = document.getElementById("search");
    activatePopup(a, "building-popup"), activatePopup(b, "floor-popup"), activatePopup(c, "menu-popup"),
    activatePopup(d, "search-popup"), urlRoom(), window.addEventListener("popstate", function(a) {
        console.log("website auto calls urlRoom"), urlTimer = setTimeout(function() {
            urlRoom();
        }, 100);
    });
});
